version: "3.7"

services:
  pgdb:
    image: postgres
    restart: always
    container_name: pgdb
    env_file: ./postgres/docker-compose.env
    volumes:
      - ./postgres/postgresDB:/var/lib/postgresql/data
      - ./postgres/postgresInit:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
  promotionsrv:
    image: cdconpromotionsrv
    depends_on:
      - pgdb
      - nats
      - usersrv
      - customersrv
      - redis
    container_name: promotionsrvcont
    env_file: ./promotion/docker-compose.env
    ports:
      - "50051:50051"
      - "2114:2112"
  promotioncli:
    image: cdconpromotioncli
    depends_on:
      - usersrv
    container_name: promotionclicont
    env_file: ./promotion/docker-compose-cli.env
    ports:
      - "50052:50051"
  usersrv:
    image: cdconusersrv
    depends_on:
      - pgdb
      - nats
    container_name: usersrvcont
    env_file: ./user/docker-compose.env
    ports:
      - "50053:50053"
      - "2111:2112"
  usercli:
    image: cdconusercli
    container_name: userclicont
    env_file: ./user/docker-compose-cli.env
    ports:
      - "50054:50051"
  auditsrv:
    image: cdconauditsrv
    depends_on:
      - timescaledb
      - nats
    container_name: auditsrvcont
    env_file: ./audit/docker-compose.env
    ports:
      - "50055:50055"
      - "2115:2112"
  customersrv:
    image: cdconcustomersrv
    depends_on:
      - arangodb
      - nats
      - usersrv
    container_name: customersrvcont
    env_file: ./customer/docker-compose.env
    ports:
      - "50057:50057"
      - "2112:2112"
  customercli:
    image: cdconcustomercli
    container_name: customerclicont
    env_file: ./customer/docker-compose-cli.env
    ports:
      - "50058:50051"
  productsrv:
    image: cdconproductsrv
    depends_on:
      - arangodb
      - nats
      - usersrv
    container_name: productsrvcont
    env_file: ./product/docker-compose.env
    ports:
      - "50059:50059"
      - "2113:2112"
  productcli:
    image: cdconproductcli
    container_name: productclicont
    env_file: ./product/docker-compose-cli.env
    ports:
      - "50060:50051"
  nats:
    build:
      context: ./nats
      dockerfile: Dockerfile
    ports:
      - "8222:8222"
      - "4222:4222"
      - "6222:6222"
  timescaledb:
    build:
      context: ./timescaledb
      dockerfile: Dockerfile
    restart: always
    container_name: timescaledb
    env_file: ./timescaledb/docker-compose.env
    volumes:
      - ./timescaledb/timescaleDB:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  arangodb:
    image: arangodb:3.6.4
    container_name: arangodbcont
    env_file: ./arangodb/docker-compose.env
    ports:
      - "8529:8529"
    volumes:
      - ./arangodb/db:/var/lib/arangodb3
      - ./arangodb/apps_db_system:/var/lib/arangodb3-apps/_db/
      - ./arangodb/arangodbinit:/docker-entrypoint-initdb.d
  redis:
    image: redis
    container_name: rediscont
    env_file: ./redis/docker-compose.env
    volumes:
    - ./redis/data:/data
    - ./redis/config:/usr/local/etc/redis/
#    command: ["redis-server","/usr/local/etc/redis/redis.conf", "--appendonly", "yes"]
    entrypoint: ["sh", "-c", "redis-server --appendonly yes --requirepass $${REDIS_PASS}"]
    ports:
      - "6379:6379"
  microapi:
    image: micro/micro:v2.9.3
    container_name: microcont
    command: api --handler=rpc --namespace=cdcon21builddriver.api
    ports:
    - "8080:8080"
  web:
    image: cdconweb
    depends_on:
      - microapi
    container_name: gtweb
    env_file: ./web/docker-compose.env
    ports:
    - "3000:8080"
    - "10000:10000"
  prometheus:
    image: prom/prometheus
    depends_on:
      - pgdbexporter
      - redisexporter
      - natsexporter
      - timescaleexporter
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    env_file: ./grafana/docker-compose.env
    ports:
    - "3001:3000"
    volumes:
    - ./grafana/data:/var/lib/grafana
    - ./grafana/provisioning:/etc/grafana/provisioning
  pgdbexporter:
    image: bitnami/postgres-exporter
    depends_on:
      - pgdb
    env_file: ./prometheus/postgresExporter/docker-compose.env
    ports:
    - "9187:9187"
  redisexporter:
    image: bitnami/redis-exporter
    depends_on:
      - redis
    env_file: ./prometheus/redisExporter/docker-compose.env
    ports:
    - "9121:9121"
  natsexporter:
    image: natsio/prometheus-nats-exporter
    depends_on:
      - nats
    ports:
    - "7777:7777"
    command: ["-varz", "http://nats:8222"]
  timescaleexporter:
    image: bitnami/postgres-exporter
    depends_on:
      - timescaledb
    env_file: ./prometheus/timescaledbExporter/docker-compose.env
    ports:
      - "9188:9187"